{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goodsList","goods","visibleGoods","sort","first","second","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","resetButton","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA9BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAoBzB,OAlBIH,IAAaP,EAASM,MACxBK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAOI,OAC/B,QACE,OAAO,MAKXd,GACFO,EAAaQ,UAGRR,EAMWS,CAAkBnB,EAClC,CAAEG,aAAYG,aACVc,EAAcjB,GAAcG,IAAaP,EAASe,UACjDR,IAAaP,EAASiB,OAE7B,OACE,sBAAKK,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYjB,IAAaP,EAASe,WAEpCU,QAAS,kBAAMjB,EAAYR,EAASe,WALtC,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYjB,IAAaP,EAASiB,SAEpCQ,QAAS,kBAAMjB,EAAYR,EAASiB,SALtC,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAapB,IAEfqB,QAAS,kBAAMpB,GAAeD,IALhC,qBAUCiB,GACC,wBACEE,KAAK,SACLD,UAAWE,IAAW,SAAU,YAAa,CAC3C,YAAapB,GAAcG,IAAaP,EAASM,OAEnDmB,QAAS,WACPpB,GAAc,GACdG,EAAYR,EAASM,OAPzB,sBAeJ,6BACE,6BACGG,EAAUiB,KAAI,SAAAC,GAAI,OACjB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cCjHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.01bce328.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((first, second) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return first.localeCompare(second);\n\n        case SortType.LENGTH:\n          return first.length - second.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const goodsList = getReorderedGoods(goodsFromServer,\n    { isReversed, sortType });\n  const resetButton = isReversed || sortType === SortType.ALPHABET\n      || sortType === SortType.LENGTH;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {resetButton && (\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-danger', {\n              'is-light': !isReversed && sortType !== SortType.NONE,\n            })}\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goodsList.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}